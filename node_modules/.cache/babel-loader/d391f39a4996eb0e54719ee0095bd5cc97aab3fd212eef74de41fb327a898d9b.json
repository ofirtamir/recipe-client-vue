{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport RecipePreview from \"./RecipePreview.vue\";\nimport { mockGetRecipesPreview } from \"../services/recipes.js\";\nexport default {\n  name: \"RecipePreviewList\",\n  components: {\n    RecipePreview: RecipePreview\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    amount: {\n      type: Number,\n      required: true\n    },\n    columns: {\n      type: Number,\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      recipes: [],\n      DisplayColumns: 0\n    };\n  },\n  mounted: function mounted() {\n    this.updateRecipes();\n    this.CalculateColumns();\n  },\n  methods: {\n    CalculateColumns: function CalculateColumns() {\n      console.log(\"hi\");\n      if (this.columns > 0) {\n        this.DisplayColumns = this.columns;\n      }\n    },\n    updateRecipes: function updateRecipes() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$recipes, response, recipes;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                // const response = await this.axios.get(\n                //   this.$root.store.server_domain + \"/recipes/random\",\n                // );\n                response = mockGetRecipesPreview(_this.amount);\n                console.log(response);\n                recipes = response.data.recipes;\n                console.log(recipes);\n                _this.recipes = [];\n                (_this$recipes = _this.recipes).push.apply(_this$recipes, _toConsumableArray(recipes));\n              } catch (error) {\n                console.log(error);\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["RecipePreview","mockGetRecipesPreview","name","components","props","title","type","String","required","amount","Number","columns","data","recipes","DisplayColumns","mounted","updateRecipes","CalculateColumns","methods","console","log","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$recipes","response","wrap","_callee$","_context","prev","next","push","apply","_toConsumableArray","error","stop"],"sources":["src/components/RecipePreviewList.vue"],"sourcesContent":["<template>\r\n  <b-container>\r\n    <h3>\r\n      {{ title }}:\r\n      {{ DisplayColumns }}\r\n      <slot></slot>\r\n    </h3>\r\n    <b-row :cols=\"DisplayColumns\" class=\"custom-row\">\r\n      <b-col v-for=\"r in recipes\" :key=\"r.id\" class=\"custom-col\">\r\n        <RecipePreview class=\"recipePreview\" :recipe=\"r\" />\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport RecipePreview from \"./RecipePreview.vue\";\r\nimport { mockGetRecipesPreview } from \"../services/recipes.js\";\r\n\r\nexport default {\r\n  name: \"RecipePreviewList\",\r\n  components: {\r\n    RecipePreview\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    amount:{\r\n      type: Number,\r\n      required: true\r\n    },\r\n    columns:{\r\n      type: Number,\r\n      required: false\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      recipes: [],\r\n      DisplayColumns: 0\r\n    };\r\n  },\r\n  mounted() {\r\n    this.updateRecipes();\r\n    this.CalculateColumns();\r\n  },\r\n  methods: {\r\n    CalculateColumns(){\r\n      console.log(\"hi\")\r\n      if (this.columns > 0) {\r\n        this.DisplayColumns = this.columns\r\n      }\r\n    },\r\n    async updateRecipes() {\r\n      try {\r\n        // const response = await this.axios.get(\r\n        //   this.$root.store.server_domain + \"/recipes/random\",\r\n        // );\r\n        const response = mockGetRecipesPreview(this.amount);\r\n\r\n\r\n        console.log(response);\r\n        const recipes = response.data.recipes;\r\n        console.log(recipes);\r\n        this.recipes = [];\r\n        this.recipes.push(...recipes);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.custom-row {\r\n  row-gap: 50px; /* Adjust this value to increase the spacing between rows */\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;;;AAgBA,OAAAA,aAAA;AACA,SAAAC,qBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,aAAA,EAAAA;EACA;EACAI,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAG,OAAA;MACAL,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;EACA;EAEAI,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,aAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAD,gBAAA,WAAAA,iBAAA;MACAE,OAAA,CAAAC,GAAA;MACA,SAAAT,OAAA;QACA,KAAAG,cAAA,QAAAH,OAAA;MACA;IACA;IACAK,aAAA,WAAAA,cAAA;MAAA,IAAAK,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,aAAA,EAAAC,QAAA,EAAAd,OAAA;QAAA,OAAAU,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACA;gBACA;gBACA;gBACA;gBACAL,QAAA,GAAA1B,qBAAA,CAAAoB,KAAA,CAAAZ,MAAA;gBAGAU,OAAA,CAAAC,GAAA,CAAAO,QAAA;gBACAd,OAAA,GAAAc,QAAA,CAAAf,IAAA,CAAAC,OAAA;gBACAM,OAAA,CAAAC,GAAA,CAAAP,OAAA;gBACAQ,KAAA,CAAAR,OAAA;gBACA,CAAAa,aAAA,GAAAL,KAAA,CAAAR,OAAA,EAAAoB,IAAA,CAAAC,KAAA,CAAAR,aAAA,EAAAS,kBAAA,CAAAtB,OAAA;cACA,SAAAuB,KAAA;gBACAjB,OAAA,CAAAC,GAAA,CAAAgB,KAAA;cACA;YAAA;YAAA;cAAA,OAAAN,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAZ,OAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}