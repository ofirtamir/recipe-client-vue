{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport countries from \"../assets/countries\";\nimport { required, minLength, maxLength, alpha, sameAs } from \"vuelidate/lib/validators\";\nimport axios from \"axios\"; // שימוש ב-axios לביצוע הבקשות לשרת\n\nexport default {\n  name: \"Register\",\n  data: function data() {\n    return {\n      form: {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        country: null,\n        password: \"\",\n        confirmedPassword: \"\",\n        email: \"\",\n        submitError: undefined\n      },\n      countries: [{\n        value: null,\n        text: \"\",\n        disabled: true\n      }],\n      errors: [],\n      validated: false\n    };\n  },\n  validations: {\n    form: {\n      username: {\n        required: required,\n        length: function length(u) {\n          return minLength(3)(u) && maxLength(8)(u);\n        },\n        alpha: alpha\n      },\n      country: {\n        required: required\n      },\n      password: {\n        required: required,\n        length: function length(p) {\n          return minLength(5)(p) && maxLength(10)(p);\n        }\n      },\n      confirmedPassword: {\n        required: required,\n        sameAsPassword: sameAs(\"password\")\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this$countries;\n    (_this$countries = this.countries).push.apply(_this$countries, _toConsumableArray(countries));\n  },\n  methods: {\n    validateState: function validateState(param) {\n      var _this$$v$form$param = this.$v.form[param],\n        $dirty = _this$$v$form$param.$dirty,\n        $error = _this$$v$form$param.$error;\n      return $dirty ? !$error : null;\n    },\n    Register: function Register() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, _err$response, _err$response$data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post(_this.$root.store.server_domain + \"/register\",\n              // משתמשים בכתובת מה-store.js\n              {\n                username: _this.form.username,\n                password: _this.form.password,\n                country: _this.form.country,\n                email: _this.form.email\n              });\n            case 3:\n              response = _context.sent;\n              // במידה וההרשמה מצליחה, נווט לדף ההתחברות\n              _this.$router.push(\"/loginpage\");\n              _context.next = 11;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              // טיפול בשגיאה, כולל הצגת הודעת השגיאה\n              console.log(_context.t0.response);\n              _this.form.submitError = ((_err$response = _context.t0.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Register failed\";\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    onRegister: function onRegister() {\n      // אתחול השגיאה לפני ניסיון הרשמה מחדש\n      this.form.submitError = undefined;\n      this.$v.form.$touch();\n      if (this.$v.form.$anyError) {\n        return;\n      }\n\n      // קריאה לפונקציה לבצע הרשמה\n      this.Register();\n    },\n    onReset: function onReset() {\n      var _this2 = this;\n      this.form = {\n        username: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        country: null,\n        password: \"\",\n        confirmedPassword: \"\",\n        email: \"\"\n      };\n      this.$nextTick(function () {\n        _this2.$v.$reset();\n      });\n    }\n  }\n};","map":{"version":3,"names":["countries","required","minLength","maxLength","alpha","sameAs","axios","name","data","form","username","firstName","lastName","country","password","confirmedPassword","email","submitError","undefined","value","text","disabled","errors","validated","validations","length","u","p","sameAsPassword","mounted","_this$countries","push","apply","_toConsumableArray","methods","validateState","param","_this$$v$form$param","$v","$dirty","$error","Register","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_err$response","_err$response$data","wrap","_callee$","_context","prev","next","post","$root","store","server_domain","sent","$router","t0","console","log","message","stop","onRegister","$touch","$anyError","onReset","_this2","$nextTick","$reset"],"sources":["src/components/Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <h1 class=\"title\">Register</h1>\r\n      <b-form @submit.prevent=\"onRegister\" @reset.prevent=\"onReset\">\r\n        <b-form-group\r\n          id=\"input-group-username\"\r\n          label-cols-sm=\"3\"\r\n          label=\"Username:\"\r\n          label-for=\"username\"\r\n        >\r\n          <b-form-input\r\n            id=\"username\"\r\n            v-model=\"$v.form.username.$model\"\r\n            type=\"text\"\r\n            :state=\"validateState('username')\"\r\n          ></b-form-input>\r\n          <b-form-invalid-feedback v-if=\"!$v.form.username.required\">\r\n            Username is required\r\n          </b-form-invalid-feedback>\r\n          <b-form-invalid-feedback v-else-if=\"!$v.form.username.length\">\r\n            Username length should be between 3-8 characters long\r\n          </b-form-invalid-feedback>\r\n          <b-form-invalid-feedback v-if=\"!$v.form.username.alpha\">\r\n            Username alpha\r\n          </b-form-invalid-feedback>\r\n        </b-form-group>\r\n  \r\n        <b-form-group\r\n          id=\"input-group-country\"\r\n          label-cols-sm=\"3\"\r\n          label=\"Country:\"\r\n          label-for=\"country\"\r\n        >\r\n          <b-form-select\r\n            id=\"country\"\r\n            v-model=\"$v.form.country.$model\"\r\n            :options=\"countries\"\r\n            :state=\"validateState('country')\"\r\n          ></b-form-select>\r\n          <b-form-invalid-feedback>\r\n            Country is required\r\n          </b-form-invalid-feedback>\r\n        </b-form-group>\r\n  \r\n        <b-form-group\r\n          id=\"input-group-Password\"\r\n          label-cols-sm=\"3\"\r\n          label=\"Password:\"\r\n          label-for=\"password\"\r\n        >\r\n          <b-form-input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            v-model=\"$v.form.password.$model\"\r\n            :state=\"validateState('password')\"\r\n          ></b-form-input>\r\n          <b-form-invalid-feedback v-if=\"!$v.form.password.required\">\r\n            Password is required\r\n          </b-form-invalid-feedback>\r\n          <b-form-text v-else-if=\"$v.form.password.$error\" text-variant=\"info\">\r\n            Your password should be <strong>strong</strong>. <br />\r\n            For that, your password should be also:\r\n          </b-form-text>\r\n          <b-form-invalid-feedback\r\n            v-if=\"$v.form.password.required && !$v.form.password.length\"\r\n          >\r\n            Have length between 5-10 characters long\r\n          </b-form-invalid-feedback>\r\n        </b-form-group>\r\n  \r\n        <b-form-group\r\n          id=\"input-group-confirmedPassword\"\r\n          label-cols-sm=\"3\"\r\n          label=\"Confirm Password:\"\r\n          label-for=\"confirmedPassword\"\r\n        >\r\n          <b-form-input\r\n            id=\"confirmedPassword\"\r\n            type=\"password\"\r\n            v-model=\"$v.form.confirmedPassword.$model\"\r\n            :state=\"validateState('confirmedPassword')\"\r\n          ></b-form-input>\r\n          <b-form-invalid-feedback v-if=\"!$v.form.confirmedPassword.required\">\r\n            Password confirmation is required\r\n          </b-form-invalid-feedback>\r\n          <b-form-invalid-feedback\r\n            v-else-if=\"!$v.form.confirmedPassword.sameAsPassword\"\r\n          >\r\n            The confirmed password is not equal to the original password\r\n          </b-form-invalid-feedback>\r\n        </b-form-group>\r\n  \r\n        <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\r\n        <b-button\r\n          type=\"submit\"\r\n          variant=\"primary\"\r\n          style=\"width:250px;\"\r\n          class=\"ml-5 w-75\"\r\n          >Register</b-button\r\n        >\r\n        <div class=\"mt-2\">\r\n          You have an account already?\r\n          <router-link to=\"loginpage\"> Log in here</router-link>\r\n        </div>\r\n      </b-form>\r\n      <b-alert\r\n        class=\"mt-2\"\r\n        v-if=\"form.submitError\"\r\n        variant=\"warning\"\r\n        dismissible\r\n        show\r\n      >\r\n        Register failed: {{ form.submitError }}\r\n      </b-alert>\r\n      <!-- <b-card class=\"mt-3 md-3\" header=\"Form Data Result\">\r\n        <pre class=\"m-0\"><strong>form:</strong> {{ form }}</pre>\r\n        <pre class=\"m-0\"><strong>$v.form:</strong> {{ $v.form }}</pre>\r\n      </b-card> -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\nimport countries from \"../assets/countries\";\r\nimport {\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n  alpha,\r\n  sameAs\r\n} from \"vuelidate/lib/validators\";\r\nimport axios from \"axios\"; // שימוש ב-axios לביצוע הבקשות לשרת\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\",\r\n        email: \"\",\r\n        submitError: undefined\r\n      },\r\n      countries: [{ value: null, text: \"\", disabled: true }],\r\n      errors: [],\r\n      validated: false\r\n    };\r\n  },\r\n  validations: {\r\n    form: {\r\n      username: {\r\n        required,\r\n        length: (u) => minLength(3)(u) && maxLength(8)(u),\r\n        alpha\r\n      },\r\n      country: {\r\n        required\r\n      },\r\n      password: {\r\n        required,\r\n        length: (p) => minLength(5)(p) && maxLength(10)(p)\r\n      },\r\n      confirmedPassword: {\r\n        required,\r\n        sameAsPassword: sameAs(\"password\")\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.countries.push(...countries);\r\n  },\r\n  methods: {\r\n    validateState(param) {\r\n      const { $dirty, $error } = this.$v.form[param];\r\n      return $dirty ? !$error : null;\r\n    },\r\n    async Register() {\r\n      try {\r\n        // שימוש ב-axios לשליחת הנתונים לשרת\r\n        const response = await axios.post(\r\n          this.$root.store.server_domain + \"/register\", // משתמשים בכתובת מה-store.js\r\n          {\r\n            username: this.form.username,\r\n            password: this.form.password,\r\n            country: this.form.country,\r\n            email: this.form.email\r\n          }\r\n        );\r\n\r\n        // במידה וההרשמה מצליחה, נווט לדף ההתחברות\r\n        this.$router.push(\"/loginpage\");\r\n\r\n      } catch (err) {\r\n        // טיפול בשגיאה, כולל הצגת הודעת השגיאה\r\n        console.log(err.response);\r\n        this.form.submitError = err.response?.data?.message || \"Register failed\";\r\n      }\r\n    },\r\n\r\n    onRegister() {\r\n      // אתחול השגיאה לפני ניסיון הרשמה מחדש\r\n      this.form.submitError = undefined;\r\n      this.$v.form.$touch();\r\n      if (this.$v.form.$anyError) {\r\n        return;\r\n      }\r\n\r\n      // קריאה לפונקציה לבצע הרשמה\r\n      this.Register();\r\n    },\r\n    onReset() {\r\n      this.form = {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\",\r\n        email: \"\"\r\n      };\r\n      this.$nextTick(() => {\r\n        this.$v.$reset();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}