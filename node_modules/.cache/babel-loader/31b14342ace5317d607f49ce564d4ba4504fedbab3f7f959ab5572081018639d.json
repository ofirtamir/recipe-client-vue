{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nexport default {\n  // mounted() {\n  //   this.axios.get(this.recipe.image).then((i) => {\n  //     this.image_load = true;\n  //   });\n  // },\n  data: function data() {\n    return {\n      // image_load: false\n      isViewed: this.checkIfViewed(this.recipe.id)\n    };\n  },\n  name: 'RecipePreviewCard',\n  props: {\n    recipe: {\n      type: Object,\n      required: true\n    }\n\n    // id: {\n    //   type: Number,\n    //   required: true\n    // },\n    // title: {\n    //   type: String,\n    //   required: true\n    // },\n    // readyInMinutes: {\n    //   type: Number,\n    //   required: true\n    // },\n    // image: {\n    //   type: String,\n    //   required: true\n    // },\n    // aggregateLikes: {\n    //   type: Number,\n    //   required: false,\n    //   default() {\n    //     return undefined;\n    //   }\n    // }\n  },\n\n  computed: {\n    favoriteImage: function favoriteImage() {\n      return this.isFavorite ? require('@/assets/favorite-.png') : require('@/assets/notfavorite.png');\n    }\n  },\n  methods: {\n    checkIfViewed: function checkIfViewed(recipeId) {\n      var viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\n      return viewedRecipes.includes(recipeId);\n    },\n    toggleFavorite: function toggleFavorite() {\n      this.isFavorite = !this.isFavorite;\n      if (this.isFavorite) {\n        this.addToFavorites();\n      } else {\n        this.removeFromFavorites();\n      }\n    },\n    addToFavorites: function addToFavorites() {\n      var _this = this;\n      var favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n      if (!favorites.some(function (r) {\n        return r.id === _this.recipe.id;\n      })) {\n        favorites.push(this.recipe);\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n      }\n    },\n    markAsViewed: function markAsViewed() {\n      var viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\n      if (!viewedRecipes.includes(this.recipe.id)) {\n        viewedRecipes.push(this.recipe.id);\n        localStorage.setItem('viewedRecipes', JSON.stringify(viewedRecipes));\n        this.isViewed = true; // Update the state to show the viewed icon\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","isViewed","checkIfViewed","recipe","id","name","props","type","Object","required","computed","favoriteImage","isFavorite","require","methods","recipeId","viewedRecipes","JSON","parse","localStorage","getItem","includes","toggleFavorite","addToFavorites","removeFromFavorites","_this","favorites","some","r","push","setItem","stringify","markAsViewed"],"sources":["src/components/RecipePreview.vue"],"sourcesContent":["<template>\r\n  <router-link\r\n    :to=\"{ name: 'recipe', params: { recipeId: recipe.id } }\"\r\n    class=\"recipe-preview\">\r\n    <div class=\"recipe-body\">\r\n      <img  :src=\"recipe.image\" class=\"recipe-image\" />\r\n    </div>\r\n    <div class=\"recipe-footer\">\r\n      <div :title=\"recipe.title\" class=\"recipe-title\">\r\n        {{ recipe.title }}\r\n      </div>\r\n      <ul class=\"recipe-overview\">\r\n        <li>{{ recipe.readyInMinutes }} minutes</li>\r\n        <li>{{ recipe.aggregateLikes }} likes</li>\r\n      </ul>\r\n      <div> \r\n        <b-icon v-if=\"isViewed\" icon=\"eye\" class=\"viewed-icon\"></b-icon>\r\n        <span v-if=\"recipe.vegetarian\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ee/Vegetarian-mark.svg/1200px-Vegetarian-mark.svg.png\" class=\"vegi\" /></span>\r\n        <span v-if=\"recipe.vegan\"><img src=\"https://uxwing.com/wp-content/themes/uxwing/download/food-and-drinks/vegan-icon.png\" class=\"vegan\" /></span>\r\n        <span v-if=\"recipe.glutenFree\"><img src=\"https://cdn-icons-png.flaticon.com/512/4337/4337722.png\" class=\"glutenFree\" /></span>\r\n        <div class=\"btn-group-toggle\">\r\n          <label class=\"btn btn-secondary active\" style=\"background-color: white;\">\r\n            <input\r\n              type=\"checkbox\"\r\n              v-model=\"isFavorite\"\r\n              @change=\"toggleFavorite\"\r\n            >\r\n            <img\r\n              :src=\"favoriteImage\"\r\n              alt=\"Favorite\"\r\n              class=\"favorite-icon\"\r\n            >\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </router-link>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // mounted() {\r\n  //   this.axios.get(this.recipe.image).then((i) => {\r\n  //     this.image_load = true;\r\n  //   });\r\n  // },\r\n  data() {\r\n    return {\r\n      // image_load: false\r\n      isViewed: this.checkIfViewed(this.recipe.id)\r\n    };\r\n  },\r\n\r\n  name: 'RecipePreviewCard',\r\n  props: {\r\n    \r\n    recipe: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n\r\n    // id: {\r\n    //   type: Number,\r\n    //   required: true\r\n    // },\r\n    // title: {\r\n    //   type: String,\r\n    //   required: true\r\n    // },\r\n    // readyInMinutes: {\r\n    //   type: Number,\r\n    //   required: true\r\n    // },\r\n    // image: {\r\n    //   type: String,\r\n    //   required: true\r\n    // },\r\n    // aggregateLikes: {\r\n    //   type: Number,\r\n    //   required: false,\r\n    //   default() {\r\n    //     return undefined;\r\n    //   }\r\n    // }\r\n  },\r\n    computed: {\r\n    favoriteImage() {\r\n      return this.isFavorite ? require('@/assets/favorite-.png') : require('@/assets/notfavorite.png');\r\n    }\r\n  },\r\n  methods: {\r\n        checkIfViewed(recipeId) {\r\n      let viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\r\n      return viewedRecipes.includes(recipeId);\r\n    },\r\n        toggleFavorite() {\r\n      this.isFavorite = !this.isFavorite;\r\n      if (this.isFavorite) {\r\n        this.addToFavorites();\r\n      } else {\r\n        this.removeFromFavorites();\r\n      }\r\n    },\r\n        addToFavorites() {\r\n      let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n      if (!favorites.some(r => r.id === this.recipe.id)) {\r\n        favorites.push(this.recipe);\r\n        localStorage.setItem('favorites', JSON.stringify(favorites));\r\n      }\r\n    },\r\n        markAsViewed() {\r\n      let viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\r\n      if (!viewedRecipes.includes(this.recipe.id)) {\r\n        viewedRecipes.push(this.recipe.id);\r\n        localStorage.setItem('viewedRecipes', JSON.stringify(viewedRecipes));\r\n        this.isViewed = true; // Update the state to show the viewed icon\r\n      }\r\n    },\r\n  \r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.recipe-preview {\r\n  display: inline-block;\r\n  width: 90%;\r\n  height: 100%;\r\n  position: relative;\r\n  margin: 10px 10px;\r\n}\r\n.recipe-preview > .recipe-body {\r\n  width: 100%;\r\n  height: 200px;\r\n  position: relative;\r\n}\r\n\r\n.recipe-preview .recipe-body .recipe-image {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  display: block;\r\n  width: 40%;\r\n  height: auto;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  background-size: cover;\r\n}\r\n\r\n.recipe-preview .recipe-footer {\r\n  width: 100%;\r\n  height: 50%;\r\n  overflow: hidden;\r\n}\r\n\r\n.recipe-preview .recipe-footer .recipe-title {\r\n  padding: 10px 10px;\r\n  width: 100%;\r\n  font-size: 12pt;\r\n  text-align: left;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.recipe-preview .recipe-footer ul.recipe-overview {\r\n  padding: 5px 10px;\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-flex: 1;\r\n  -moz-box-flex: 1;\r\n  -o-box-flex: 1;\r\n  box-flex: 1;\r\n  -webkit-flex: 1 auto;\r\n  -ms-flex: 1 auto;\r\n  flex: 1 auto;\r\n  table-layout: fixed;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.recipe-preview .recipe-footer ul.recipe-overview li {\r\n  -webkit-box-flex: 1;\r\n  -moz-box-flex: 1;\r\n  -o-box-flex: 1;\r\n  -ms-box-flex: 1;\r\n  box-flex: 1;\r\n  -webkit-flex-grow: 1;\r\n  flex-grow: 1;\r\n  width: 90px;\r\n  display: table-cell;\r\n  text-align: center;\r\n}\r\n.viewed-icon{\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 5px;\r\n}\r\n.vegan,\r\n.glutenFree,\r\n.vegi {\r\n  width: 30px;\r\n  height: auto;\r\n  margin-right: 5px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;AAwCA;EACA;EACA;EACA;EACA;EACA;EACAA,IAAA,WAAAA,KAAA;IACA;MACA;MACAC,QAAA,OAAAC,aAAA,MAAAC,MAAA,CAAAC,EAAA;IACA;EACA;EAEAC,IAAA;EACAC,KAAA;IAEAH,MAAA;MACAI,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EACAC,QAAA;IACAC,aAAA,WAAAA,cAAA;MACA,YAAAC,UAAA,GAAAC,OAAA,6BAAAA,OAAA;IACA;EACA;EACAC,OAAA;IACAZ,aAAA,WAAAA,cAAAa,QAAA;MACA,IAAAC,aAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,OAAAJ,aAAA,CAAAK,QAAA,CAAAN,QAAA;IACA;IACAO,cAAA,WAAAA,eAAA;MACA,KAAAV,UAAA,SAAAA,UAAA;MACA,SAAAA,UAAA;QACA,KAAAW,cAAA;MACA;QACA,KAAAC,mBAAA;MACA;IACA;IACAD,cAAA,WAAAA,eAAA;MAAA,IAAAE,KAAA;MACA,IAAAC,SAAA,GAAAT,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,KAAAM,SAAA,CAAAC,IAAA,WAAAC,CAAA;QAAA,OAAAA,CAAA,CAAAxB,EAAA,KAAAqB,KAAA,CAAAtB,MAAA,CAAAC,EAAA;MAAA;QACAsB,SAAA,CAAAG,IAAA,MAAA1B,MAAA;QACAgB,YAAA,CAAAW,OAAA,cAAAb,IAAA,CAAAc,SAAA,CAAAL,SAAA;MACA;IACA;IACAM,YAAA,WAAAA,aAAA;MACA,IAAAhB,aAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,KAAAJ,aAAA,CAAAK,QAAA,MAAAlB,MAAA,CAAAC,EAAA;QACAY,aAAA,CAAAa,IAAA,MAAA1B,MAAA,CAAAC,EAAA;QACAe,YAAA,CAAAW,OAAA,kBAAAb,IAAA,CAAAc,SAAA,CAAAf,aAAA;QACA,KAAAf,QAAA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}