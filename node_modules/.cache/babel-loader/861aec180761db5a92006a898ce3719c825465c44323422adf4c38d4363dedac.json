{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport axios from 'axios';\nimport RecipePreviewList from '../components/RecipePreviewList';\nexport default {\n  name: 'SearchPage',\n  data: function data() {\n    return {\n      query: '',\n      numberOfResults: 5,\n      resultOptions: [5, 10, 15],\n      selectedCuisine: '',\n      cuisineOptions: [{\n        value: '',\n        text: 'Any'\n      }, {\n        value: 'italian',\n        text: 'Italian'\n      }, {\n        value: 'mexican',\n        text: 'Mexican'\n      }, {\n        value: 'indian',\n        text: 'Indian'\n      }],\n      selectedDiet: '',\n      dietOptions: [{\n        value: '',\n        text: 'Any'\n      }, {\n        value: 'vegetarian',\n        text: 'Vegetarian'\n      }, {\n        value: 'vegan',\n        text: 'Vegan'\n      }, {\n        value: 'paleo',\n        text: 'Paleo'\n      }],\n      selectedIntolerance: '',\n      intoleranceOptions: [{\n        value: '',\n        text: 'None'\n      }, {\n        value: 'gluten',\n        text: 'Gluten'\n      }, {\n        value: 'dairy',\n        text: 'Dairy'\n      }, {\n        value: 'peanut',\n        text: 'Peanut'\n      }],\n      selectedFilter: '',\n      filterOptions: [{\n        value: '',\n        text: 'No filter'\n      }, {\n        value: 'vegetarian',\n        text: 'Vegetarian'\n      }, {\n        value: 'vegan',\n        text: 'Vegan'\n      }, {\n        value: 'glutenFree',\n        text: 'Gluten Free'\n      }],\n      sortOption: '',\n      sortOptions: [{\n        value: '',\n        text: 'No sorting'\n      }, {\n        value: 'time',\n        text: 'Preparation Time'\n      }, {\n        value: 'popularity',\n        text: 'Popularity'\n      }],\n      recipes: []\n    };\n  },\n  computed: {\n    sortedRecipes: function sortedRecipes() {\n      if (this.sortOption === 'time') {\n        return _toConsumableArray(this.recipes).sort(function (a, b) {\n          return a.readyInMinutes - b.readyInMinutes;\n        });\n      } else if (this.sortOption === 'popularity') {\n        return _toConsumableArray(this.recipes).sort(function (a, b) {\n          return b.aggregateLikes - a.aggregateLikes;\n        });\n      }\n      return this.recipes;\n    }\n  },\n  components: {\n    RecipePreviewList: RecipePreviewList\n  },\n  methods: {\n    searchRecipes: function searchRecipes() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var url, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              url = \"\".concat(_this.$root.store.server_domain, \"/recipes/search\");\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(url, {\n                params: {\n                  recipeName: _this.query,\n                  number: _this.numberOfResults,\n                  cuisine: _this.selectedCuisine,\n                  diet: _this.selectedDiet,\n                  intolerance: _this.selectedIntolerance\n                }\n              });\n            case 4:\n              response = _context.sent;\n              _this.recipes = response.data;\n              // Save the current search state to localStorage\n              _this.saveState();\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error fetching recipes:', _context.t0);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 9]]);\n      }))();\n    },\n    saveState: function saveState() {\n      var searchState = {\n        query: this.query,\n        numberOfResults: this.numberOfResults,\n        selectedCuisine: this.selectedCuisine,\n        selectedDiet: this.selectedDiet,\n        selectedIntolerance: this.selectedIntolerance,\n        selectedFilter: this.selectedFilter,\n        sortOption: this.sortOption\n      };\n      localStorage.setItem('searchState', JSON.stringify(searchState));\n      localStorage.setItem('searchResults', JSON.stringify(this.recipes));\n    },\n    loadState: function loadState() {\n      var savedState = localStorage.getItem('searchState');\n      if (savedState) {\n        var _JSON$parse = JSON.parse(savedState),\n          query = _JSON$parse.query,\n          numberOfResults = _JSON$parse.numberOfResults,\n          selectedCuisine = _JSON$parse.selectedCuisine,\n          selectedDiet = _JSON$parse.selectedDiet,\n          selectedIntolerance = _JSON$parse.selectedIntolerance,\n          selectedFilter = _JSON$parse.selectedFilter,\n          sortOption = _JSON$parse.sortOption;\n        this.query = query;\n        this.numberOfResults = numberOfResults || 5;\n        this.selectedCuisine = selectedCuisine || '';\n        this.selectedDiet = selectedDiet || '';\n        this.selectedIntolerance = selectedIntolerance;\n        this.selectedFilter = selectedFilter || '';\n        this.sortOption = sortOption || '';\n      }\n      this.recipes = JSON.parse(localStorage.getItem('searchResults')) || [];\n    }\n  },\n  mounted: function mounted() {\n    this.loadState();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.saveState();\n  }\n};","map":{"version":3,"names":["axios","RecipePreviewList","name","data","query","numberOfResults","resultOptions","selectedCuisine","cuisineOptions","value","text","selectedDiet","dietOptions","selectedIntolerance","intoleranceOptions","selectedFilter","filterOptions","sortOption","sortOptions","recipes","computed","sortedRecipes","_toConsumableArray","sort","a","b","readyInMinutes","aggregateLikes","components","methods","searchRecipes","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","wrap","_callee$","_context","prev","next","concat","$root","store","server_domain","get","params","recipeName","number","cuisine","diet","intolerance","sent","saveState","t0","console","error","stop","searchState","localStorage","setItem","JSON","stringify","loadState","savedState","getItem","_JSON$parse","parse","mounted","beforeDestroy"],"sources":["src/pages/SearchPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <b-jumbotron>\r\n      <template #header>Search</template>\r\n      <template #lead>Here you will find the recipes</template>\r\n\r\n      <b-form @submit.prevent=\"searchRecipes\">\r\n        <b-form-group label=\"Search for recipes\">\r\n          <b-form-input v-model=\"query\" placeholder=\"Enter recipe name\"></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group label=\"Number of recipes to return\">\r\n          <b-form-select v-model=\"numberOfResults\" :options=\"resultOptions\"></b-form-select>\r\n        </b-form-group>\r\n\r\n        <!-- Select Cuisine -->\r\n        <b-form-group label=\"Cuisine\">\r\n          <b-form-select v-model=\"selectedCuisine\" :options=\"cuisineOptions\"></b-form-select>\r\n        </b-form-group>\r\n\r\n        <!-- Select Diet -->\r\n        <b-form-group label=\"Diet\">\r\n          <b-form-select v-model=\"selectedDiet\" :options=\"dietOptions\"></b-form-select>\r\n        </b-form-group>\r\n\r\n        <!-- Select Intolerance -->\r\n        <b-form-group label=\"Intolerance\">\r\n          <b-form-select v-model=\"selectedIntolerance\" :options=\"intoleranceOptions\"></b-form-select>\r\n        </b-form-group>\r\n        <b-form-group label=\"Filter by\">\r\n          <b-form-select v-model=\"selectedFilter\" :options=\"filterOptions\"></b-form-select>\r\n        </b-form-group>\r\n\r\n        <b-button type=\"submit\" variant=\"primary\">Search</b-button>\r\n      </b-form>\r\n\r\n      <div v-if=\"recipes.length\">\r\n        <b-form-group label=\"Sort by\">\r\n          <b-form-select v-model=\"sortOption\" :options=\"sortOptions\"></b-form-select>\r\n        </b-form-group>\r\n\r\n        <RecipePreviewList\r\n          title=\"Search Results\"\r\n          :fromAPI=\"true\"\r\n          :recipes=\"sortedRecipes\"\r\n          :amount=\"numberOfResults\"\r\n          :columns=\"2\"\r\n        />\r\n      </div>\r\n      <div v-else>\r\n        <p>No relevant results were found.</p>\r\n      </div>\r\n    </b-jumbotron>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport RecipePreviewList from '../components/RecipePreviewList';\r\n\r\nexport default {\r\n  name: 'SearchPage',\r\n  data() {\r\n    return {\r\n      query: '',\r\n      numberOfResults: 5,\r\n      resultOptions: [5, 10, 15],\r\n      selectedCuisine: '', \r\n      cuisineOptions: [\r\n        { value: '', text: 'Any' },\r\n        { value: 'italian', text: 'Italian' },\r\n        { value: 'mexican', text: 'Mexican' },\r\n        { value: 'indian', text: 'Indian' },\r\n      ],\r\n      selectedDiet: '', \r\n      dietOptions: [\r\n        { value: '', text: 'Any' },\r\n        { value: 'vegetarian', text: 'Vegetarian' },\r\n        { value: 'vegan', text: 'Vegan' },\r\n        { value: 'paleo', text: 'Paleo' },\r\n      ],\r\n      selectedIntolerance: '', \r\n      intoleranceOptions: [\r\n        { value: '', text: 'None' },\r\n        { value: 'gluten', text: 'Gluten' },\r\n        { value: 'dairy', text: 'Dairy' },\r\n        { value: 'peanut', text: 'Peanut' },\r\n      ],\r\n      selectedFilter: '',\r\n      filterOptions: [\r\n        { value: '', text: 'No filter' },\r\n        { value: 'vegetarian', text: 'Vegetarian' },\r\n        { value: 'vegan', text: 'Vegan' },\r\n        { value: 'glutenFree', text: 'Gluten Free' },\r\n      ],\r\n      sortOption: '',\r\n      sortOptions: [\r\n        { value: '', text: 'No sorting' },\r\n        { value: 'time', text: 'Preparation Time' },\r\n        { value: 'popularity', text: 'Popularity' },\r\n      ],\r\n      recipes: [],\r\n    };\r\n  },\r\n  computed: {\r\n    sortedRecipes() {\r\n      if (this.sortOption === 'time') {\r\n        return [...this.recipes].sort((a, b) => a.readyInMinutes - b.readyInMinutes);\r\n      } else if (this.sortOption === 'popularity') {\r\n        return [...this.recipes].sort((a, b) => b.aggregateLikes - a.aggregateLikes);\r\n      }\r\n      return this.recipes;\r\n    },\r\n  },\r\n  components: {\r\n    RecipePreviewList,\r\n  },\r\n  methods: {\r\n    async searchRecipes() {\r\n      const url = `${this.$root.store.server_domain}/recipes/search`;\r\n\r\n      try {\r\n        const response = await axios.get(url, {\r\n          params: {\r\n            recipeName: this.query,\r\n            number: this.numberOfResults,\r\n            cuisine: this.selectedCuisine, \r\n            diet: this.selectedDiet, \r\n            intolerance: this.selectedIntolerance, \r\n          },\r\n        });\r\n\r\n        this.recipes = response.data;\r\n        // Save the current search state to localStorage\r\n        this.saveState();\r\n      } catch (error) {\r\n        console.error('Error fetching recipes:', error);\r\n      }\r\n    },\r\n    saveState() {\r\n      const searchState = {\r\n        query: this.query,\r\n        numberOfResults: this.numberOfResults,\r\n        selectedCuisine: this.selectedCuisine,\r\n        selectedDiet: this.selectedDiet,\r\n        selectedIntolerance: this.selectedIntolerance,\r\n        selectedFilter: this.selectedFilter,\r\n        sortOption: this.sortOption,\r\n      };\r\n      \r\n      localStorage.setItem('searchState', JSON.stringify(searchState));\r\n      localStorage.setItem('searchResults', JSON.stringify(this.recipes));\r\n    },\r\n    loadState() {\r\n      const savedState = localStorage.getItem('searchState');\r\n      if (savedState) {\r\n        const { query, numberOfResults, selectedCuisine, selectedDiet, selectedIntolerance, selectedFilter, sortOption } = JSON.parse(savedState);\r\n        this.query = query;\r\n        this.numberOfResults = numberOfResults || 5;\r\n        this.selectedCuisine = selectedCuisine || '';\r\n        this.selectedDiet = selectedDiet || '';\r\n        this.selectedIntolerance = selectedIntolerance;\r\n        this.selectedFilter = selectedFilter || '';\r\n        this.sortOption = sortOption || '';\r\n      }\r\n      this.recipes = JSON.parse(localStorage.getItem('searchResults')) || [];\r\n    },\r\n  },\r\n  mounted() {\r\n    this.loadState();\r\n  },\r\n  beforeDestroy() {\r\n    this.saveState();\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}