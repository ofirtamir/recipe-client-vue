{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { mockAddUserRecipe } from '../services/user.js';\nexport default {\n  name: \"Modal\",\n  data: function data() {\n    return {\n      showModal: false,\n      recipe: {\n        name: '',\n        ingredients: '',\n        instructions: ''\n      }\n    };\n  },\n  methods: {\n    toggleModal: function toggleModal() {\n      this.showModal = !this.showModal;\n    },\n    resetForm: function resetForm() {\n      this.recipe = {\n        name: '',\n        ingredients: '',\n        instructions: ''\n      };\n    },\n    submitForm: function submitForm() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return mockAddUserRecipe(_this.recipe);\n            case 3:\n              response = _context.sent;\n              if (response.status === 200 && response.response.data.success) {\n                console.log(response.response.data.message);\n                // Optionally, display a success message to the user\n                _this.$bvToast.toast(response.response.data.message, {\n                  title: 'Success',\n                  variant: 'success',\n                  solid: true\n                });\n                _this.toggleModal();\n                _this.resetForm();\n              } else {\n                console.error('Error adding recipe:', response);\n                // Optionally, display an error message to the user\n                _this.$bvToast.toast('Error adding recipe', {\n                  title: 'Error',\n                  variant: 'danger',\n                  solid: true\n                });\n              }\n              _context.next = 11;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error:', _context.t0);\n              // Optionally, display an error message to the user\n              _this.$bvToast.toast('Error adding recipe', {\n                title: 'Error',\n                variant: 'danger',\n                solid: true\n              });\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["mockAddUserRecipe","name","data","showModal","recipe","ingredients","instructions","methods","toggleModal","resetForm","submitForm","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","status","success","console","log","message","$bvToast","toast","title","variant","solid","error","t0","stop"],"sources":["src/components/Modal.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <b-modal\r\n        id=\"new-recipe-modal\"\r\n        title=\"Add New Recipe\"\r\n        v-model=\"showModal\"\r\n        @hide=\"resetForm\"\r\n      >\r\n        <b-form @submit.prevent=\"submitForm\">\r\n          <b-form-group label=\"Recipe Name:\" label-for=\"recipe-name\">\r\n            <b-form-input\r\n              id=\"recipe-name\"\r\n              v-model=\"recipe.name\"\r\n              required\r\n              placeholder=\"Enter recipe name\"\r\n            ></b-form-input>\r\n          </b-form-group>\r\n  \r\n          <b-form-group label=\"Ingredients:\" label-for=\"recipe-ingredients\">\r\n            <b-form-textarea\r\n              id=\"recipe-ingredients\"\r\n              v-model=\"recipe.ingredients\"\r\n              required\r\n              placeholder=\"Enter ingredients\"\r\n              rows=\"3\"\r\n            ></b-form-textarea>\r\n          </b-form-group>\r\n  \r\n          <b-form-group label=\"Instructions:\" label-for=\"recipe-instructions\">\r\n            <b-form-textarea\r\n              id=\"recipe-instructions\"\r\n              v-model=\"recipe.instructions\"\r\n              required\r\n              placeholder=\"Enter instructions\"\r\n              rows=\"3\"\r\n            ></b-form-textarea>\r\n          </b-form-group>\r\n        </b-form>\r\n        <template #modal-footer=\"{ cancel }\">\r\n            <b-button variant=\"danger\" @click=\"cancel()\">Cancel</b-button>\r\n            <b-button variant=\"secondary\" @click=\"resetForm\">Clear Form</b-button>\r\n            <b-button variant=\"success\" @click=\"submitForm\">OK</b-button>\r\n        </template>\r\n      </b-modal>\r\n    </div>\r\n  </template>\r\n  \r\n<script>\r\nimport { mockAddUserRecipe } from '../services/user.js';\r\n\r\nexport default {\r\n  name: \"Modal\",\r\n  data() {\r\n    return {\r\n      showModal: false,\r\n      recipe: {\r\n        name: '',\r\n        ingredients: '',\r\n        instructions: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    toggleModal() {\r\n      this.showModal = !this.showModal;\r\n    },\r\n    resetForm() {\r\n      this.recipe = {\r\n        name: '',\r\n        ingredients: '',\r\n        instructions: ''\r\n      };\r\n    },\r\n    async submitForm() {\r\n      try {\r\n        const response = await mockAddUserRecipe(this.recipe);\r\n        if (response.status === 200 && response.response.data.success) {\r\n          console.log(response.response.data.message);\r\n          // Optionally, display a success message to the user\r\n          this.$bvToast.toast(response.response.data.message, {\r\n            title: 'Success',\r\n            variant: 'success',\r\n            solid: true\r\n          });\r\n          this.toggleModal();\r\n          this.resetForm();\r\n        } else {\r\n          console.error('Error adding recipe:', response);\r\n          // Optionally, display an error message to the user\r\n          this.$bvToast.toast('Error adding recipe', {\r\n            title: 'Error',\r\n            variant: 'danger',\r\n            solid: true\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        // Optionally, display an error message to the user\r\n        this.$bvToast.toast('Error adding recipe', {\r\n          title: 'Error',\r\n          variant: 'danger',\r\n          solid: true\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n/* Add any custom styles here */\r\n</style>"],"mappings":";;AAgDA,SAAAA,iBAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,MAAA;QACAH,IAAA;QACAI,WAAA;QACAC,YAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAL,SAAA,SAAAA,SAAA;IACA;IACAM,SAAA,WAAAA,UAAA;MACA,KAAAL,MAAA;QACAH,IAAA;QACAI,WAAA;QACAC,YAAA;MACA;IACA;IACAI,UAAA,WAAAA,WAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEArB,iBAAA,CAAAW,KAAA,CAAAP,MAAA;YAAA;cAAAY,QAAA,GAAAG,QAAA,CAAAG,IAAA;cACA,IAAAN,QAAA,CAAAO,MAAA,YAAAP,QAAA,CAAAA,QAAA,CAAAd,IAAA,CAAAsB,OAAA;gBACAC,OAAA,CAAAC,GAAA,CAAAV,QAAA,CAAAA,QAAA,CAAAd,IAAA,CAAAyB,OAAA;gBACA;gBACAhB,KAAA,CAAAiB,QAAA,CAAAC,KAAA,CAAAb,QAAA,CAAAA,QAAA,CAAAd,IAAA,CAAAyB,OAAA;kBACAG,KAAA;kBACAC,OAAA;kBACAC,KAAA;gBACA;gBACArB,KAAA,CAAAH,WAAA;gBACAG,KAAA,CAAAF,SAAA;cACA;gBACAgB,OAAA,CAAAQ,KAAA,yBAAAjB,QAAA;gBACA;gBACAL,KAAA,CAAAiB,QAAA,CAAAC,KAAA;kBACAC,KAAA;kBACAC,OAAA;kBACAC,KAAA;gBACA;cACA;cAAAb,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAe,EAAA,GAAAf,QAAA;cAEAM,OAAA,CAAAQ,KAAA,WAAAd,QAAA,CAAAe,EAAA;cACA;cACAvB,KAAA,CAAAiB,QAAA,CAAAC,KAAA;gBACAC,KAAA;gBACAC,OAAA;gBACAC,KAAA;cACA;YAAA;YAAA;cAAA,OAAAb,QAAA,CAAAgB,IAAA;UAAA;QAAA,GAAApB,OAAA;MAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}