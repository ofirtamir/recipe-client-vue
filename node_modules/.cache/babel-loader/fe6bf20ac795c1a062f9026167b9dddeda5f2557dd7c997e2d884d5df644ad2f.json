{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { mockAddFavorite, mockDeleteFavorite } from \"../services/user.js\";\nexport default {\n  // mounted() {\n  //   this.axios.get(this.recipe.image).then((i) => {\n  //     this.image_load = true;\n  //   });\n  // },\n  data: function data() {\n    return {\n      image_load: true,\n      isFavorite: false,\n      isViewed: false\n    };\n  },\n  name: 'RecipePreviewCard',\n  props: {\n    recipe: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    favoriteImage: function favoriteImage() {\n      return this.isFavorite ? require('@/assets/favorite-icon.png') : require('@/assets/not-favorite-icon.png');\n    }\n  },\n  methods: {\n    checkIfViewed: function checkIfViewed() {\n      var viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\n      return viewedRecipes.includes(this.recipe.id);\n    },\n    markAsViewed: function markAsViewed() {\n      var viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\n      if (!viewedRecipes.includes(this.recipe.id)) {\n        viewedRecipes.push(this.recipe.id);\n        localStorage.setItem('viewedRecipes', JSON.stringify(viewedRecipes));\n        this.isViewed = true;\n      }\n    },\n    toggleFavorite: function toggleFavorite() {\n      this.isFavorite = !this.isFavorite;\n      var action = this.isFavorite ? mockAddFavorite : mockDeleteFavorite;\n      try {\n        var serverResponse = action(this.recipe.id);\n        var status = serverResponse.status,\n          data = serverResponse.response.data;\n        if (status === 200 && data.success) {\n          console.log(data.message);\n          this.showToast(data.message, 'Success', 'success');\n        } else {\n          this.handleError(serverResponse);\n        }\n      } catch (error) {\n        this.handleError(error);\n      }\n    },\n    showToast: function showToast(message, title, variant) {\n      this.$bvToast.toast(message, {\n        title: title,\n        variant: variant,\n        solid: true\n      });\n    },\n    handleError: function handleError(error) {\n      console.error('Error updating favorite status:', error);\n      this.showToast('Error updating favorite status', 'Error', 'danger');\n    }\n  },\n  created: function created() {\n    this.isViewed = this.checkIfViewed(this.recipe.id);\n  },\n  updated: function updated() {\n    this.isViewed = this.checkIfViewed(this.recipe.id);\n  }\n};","map":{"version":3,"names":["mockAddFavorite","mockDeleteFavorite","data","image_load","isFavorite","isViewed","name","props","recipe","type","Object","required","computed","favoriteImage","require","methods","checkIfViewed","viewedRecipes","JSON","parse","localStorage","getItem","includes","id","markAsViewed","push","setItem","stringify","toggleFavorite","action","serverResponse","status","response","success","console","log","message","showToast","handleError","error","title","variant","$bvToast","toast","solid","created","updated"],"sources":["src/components/RecipePreview.vue"],"sourcesContent":["<template>\r\n  <div class=\"card-container\"> \r\n    <b-card\r\n      :to=\"{ name:'recipe', params: { recipeId: recipe.id } }\"\r\n      img-alt=\"Image\"\r\n      img-top\r\n      tag=\"article\"\r\n      class=\"mb-1 card\"\r\n    >\r\n      <template #header>\r\n          <b-link\r\n          :to=\"{ name: 'recipe', params: { recipeId: recipe.id }}\"\r\n          class=\"text-dark header\"\r\n          @change=\"markAsViewed\">\r\n          {{ recipe.title }} \r\n          </b-link>\r\n      </template>\r\n\r\n      <b-link\r\n      :to=\"{ name: 'recipe', params: { recipeId: recipe.id }}\" \r\n      @change=\"markAsViewed\">\r\n          <b-card-img \r\n            :src=\"recipe.image\"\r\n            alt=\"Image\"\r\n            top\r\n            class=\"card-image\"\r\n          ></b-card-img>\r\n        </b-link>\r\n\r\n      <b-list-group flush>\r\n        <b-list-group-item>Ready in {{ recipe.readyInMinutes }} minutes</b-list-group-item>\r\n        <b-list-group-item>{{ recipe.aggregateLikes }} likes</b-list-group-item>\r\n      </b-list-group>\r\n\r\n      <template #footer>\r\n        <div class=\"footer-icons\">\r\n          <b-icon v-if=\"checkIfViewed\" icon=\"eye\" class=\"viewed-icon\"></b-icon>\r\n          <span :to=\"{ name: 'recipe', params: { recipeId: recipe.id } }\" v-if=\"recipe.vegetarian\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ee/Vegetarian-mark.svg/1200px-Vegetarian-mark.svg.png\" class=\"vegi\" /></span>\r\n          <span v-if=\"recipe.vegan\"><img src=\"https://uxwing.com/wp-content/themes/uxwing/download/food-and-drinks/vegan-icon.png\" class=\"vegan\" /></span>\r\n          <span v-if=\"recipe.glutenFree\"><img src=\"https://cdn-icons-png.flaticon.com/512/4337/4337722.png\" class=\"glutenFree\" /></span>\r\n          \r\n\r\n          <label style=\"background-color: transparent;\">\r\n            <input type=\"checkbox\" @change=\"toggleFavorite\" class=\"custom-checkbox\"> \r\n            <img :src=\"favoriteImage\" alt=\"Favorite\" class=\"favorite-icon\">\r\n          </label>\r\n        </div>\r\n      </template>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockAddFavorite, mockDeleteFavorite } from \"../services/user.js\";\r\n\r\nexport default {\r\n  // mounted() {\r\n  //   this.axios.get(this.recipe.image).then((i) => {\r\n  //     this.image_load = true;\r\n  //   });\r\n  // },\r\n  data() {\r\n    return {\r\n      image_load: true,\r\n      isFavorite: false,\r\n      isViewed: false\r\n    };\r\n  },\r\n\r\n  name: 'RecipePreviewCard',\r\n  props: {\r\n    recipe: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n  },\r\n  computed: {\r\n    favoriteImage() {\r\n      return this.isFavorite ? require('@/assets/favorite-icon.png') : require('@/assets/not-favorite-icon.png');\r\n    }\r\n  },\r\n  methods: {\r\n    checkIfViewed() {\r\n      let viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\r\n      return viewedRecipes.includes(this.recipe.id);\r\n      \r\n\r\n    },\r\n\r\n    markAsViewed() {\r\n      let viewedRecipes = JSON.parse(localStorage.getItem('viewedRecipes')) || [];\r\n      if (!viewedRecipes.includes(this.recipe.id)) {\r\n        viewedRecipes.push(this.recipe.id);\r\n        localStorage.setItem('viewedRecipes', JSON.stringify(viewedRecipes));\r\n        this.isViewed = true; \r\n      }\r\n    },\r\n\r\n    toggleFavorite() {\r\n      this.isFavorite = !this.isFavorite;\r\n      const action = this.isFavorite ? mockAddFavorite : mockDeleteFavorite;\r\n\r\n      try {\r\n        const serverResponse = action(this.recipe.id);\r\n\r\n        const { status, response: { data } } = serverResponse;\r\n\r\n        if (status === 200 && data.success) {\r\n          console.log(data.message);\r\n          this.showToast(data.message, 'Success', 'success');\r\n        } else {\r\n          this.handleError(serverResponse);\r\n        }\r\n      } catch (error) {\r\n        this.handleError(error);\r\n      }\r\n    },\r\n\r\n    showToast(message, title, variant) {\r\n      this.$bvToast.toast(message, {\r\n        title,\r\n        variant,\r\n        solid: true\r\n      });\r\n    },\r\n\r\n    handleError(error) {\r\n      console.error('Error updating favorite status:', error);\r\n      this.showToast('Error updating favorite status', 'Error', 'danger');\r\n    },\r\n  },\r\n  created() {\r\n    this.isViewed = this.checkIfViewed(this.recipe.id);\r\n  },\r\n  updated() {\r\n    this.isViewed = this.checkIfViewed(this.recipe.id);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header { /* header text */\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.footer-icons {\r\n  display: flex;\r\n  justify-content: center; /* Center horizontally */\r\n  align-items: center; /* Center vertically */\r\n  gap: 5px; /* Space between icons */\r\n}\r\n\r\n.card-image {\r\n  height: 10rem; /* Adjust height as needed */\r\n}\r\n\r\n.card {\r\n  width: 21rem;\r\n  height: 28rem;\r\n}\r\n\r\n.custom-checkbox {\r\n  opacity: 0; /* Make it invisible */\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.vegan,\r\n.glutenFree,\r\n.vegi {\r\n  width: 30px;\r\n  height: auto;\r\n}\r\n.favorite-icon\r\n{\r\n  width: 30px;\r\n  height: auto;\r\n  margin-top: 5px;\r\n}\r\n</style>\r\n"],"mappings":";;;;AAqDA,SAAAA,eAAA,EAAAC,kBAAA;AAEA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;MACAC,UAAA;MACAC,QAAA;IACA;EACA;EAEAC,IAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA,WAAAA,cAAA;MACA,YAAAT,UAAA,GAAAU,OAAA,iCAAAA,OAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA,WAAAA,cAAA;MACA,IAAAC,aAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,OAAAJ,aAAA,CAAAK,QAAA,MAAAd,MAAA,CAAAe,EAAA;IAGA;IAEAC,YAAA,WAAAA,aAAA;MACA,IAAAP,aAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,KAAAJ,aAAA,CAAAK,QAAA,MAAAd,MAAA,CAAAe,EAAA;QACAN,aAAA,CAAAQ,IAAA,MAAAjB,MAAA,CAAAe,EAAA;QACAH,YAAA,CAAAM,OAAA,kBAAAR,IAAA,CAAAS,SAAA,CAAAV,aAAA;QACA,KAAAZ,QAAA;MACA;IACA;IAEAuB,cAAA,WAAAA,eAAA;MACA,KAAAxB,UAAA,SAAAA,UAAA;MACA,IAAAyB,MAAA,QAAAzB,UAAA,GAAAJ,eAAA,GAAAC,kBAAA;MAEA;QACA,IAAA6B,cAAA,GAAAD,MAAA,MAAArB,MAAA,CAAAe,EAAA;QAEA,IAAAQ,MAAA,GAAAD,cAAA,CAAAC,MAAA;UAAA7B,IAAA,GAAA4B,cAAA,CAAAE,QAAA,CAAA9B,IAAA;QAEA,IAAA6B,MAAA,YAAA7B,IAAA,CAAA+B,OAAA;UACAC,OAAA,CAAAC,GAAA,CAAAjC,IAAA,CAAAkC,OAAA;UACA,KAAAC,SAAA,CAAAnC,IAAA,CAAAkC,OAAA;QACA;UACA,KAAAE,WAAA,CAAAR,cAAA;QACA;MACA,SAAAS,KAAA;QACA,KAAAD,WAAA,CAAAC,KAAA;MACA;IACA;IAEAF,SAAA,WAAAA,UAAAD,OAAA,EAAAI,KAAA,EAAAC,OAAA;MACA,KAAAC,QAAA,CAAAC,KAAA,CAAAP,OAAA;QACAI,KAAA,EAAAA,KAAA;QACAC,OAAA,EAAAA,OAAA;QACAG,KAAA;MACA;IACA;IAEAN,WAAA,WAAAA,YAAAC,KAAA;MACAL,OAAA,CAAAK,KAAA,oCAAAA,KAAA;MACA,KAAAF,SAAA;IACA;EACA;EACAQ,OAAA,WAAAA,QAAA;IACA,KAAAxC,QAAA,QAAAW,aAAA,MAAAR,MAAA,CAAAe,EAAA;EACA;EACAuB,OAAA,WAAAA,QAAA;IACA,KAAAzC,QAAA,QAAAW,aAAA,MAAAR,MAAA,CAAAe,EAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}