{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport RecipePreview from \"./RecipePreview.vue\";\nimport { mockGetRecipesPreview } from \"../services/recipes.js\";\nexport default {\n  name: \"RecipePreviewList\",\n  components: {\n    RecipePreview: RecipePreview\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    amount: {\n      type: Number,\n      required: true\n    },\n    columns: {\n      type: Number,\n      required: false\n    },\n    response: {\n      require: false\n    }\n  },\n  data: function data() {\n    return {\n      recipes: [],\n      DisplayColumns: 0,\n      offset: 0\n    };\n  },\n  mounted: function mounted() {\n    this.updateRecipes(this.response);\n  },\n  methods: {\n    IncreaseOffset: function IncreaseOffset() {\n      var increaseValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n      this.offset = this.offset + increaseValue;\n      this.updateRecipes();\n    },\n    updateRecipes: function updateRecipes() {\n      var _arguments = arguments,\n        _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, _this$recipes, recipes;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              response = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : null;\n              try {\n                // const response = await this.axios.get(\n                //   this.$root.store.server_domain + \"/recipes/random\",\n                // );\n                a;\n                if (!response) response = mockGetRecipesPreview(_this.amount, _this.offset);\n                console.log(response);\n                recipes = response.data.recipes;\n                console.log(recipes);\n                _this.recipes = [];\n                (_this$recipes = _this.recipes).push.apply(_this$recipes, _toConsumableArray(recipes));\n              } catch (error) {\n                console.log(error);\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    getRecipesFromApi: function getRecipesFromApi(response) {\n      var _this$recipes2;\n      this.recipes = [];\n      (_this$recipes2 = this.recipes).push.apply(_this$recipes2, _toConsumableArray(response));\n    }\n  }\n};","map":{"version":3,"names":["RecipePreview","mockGetRecipesPreview","name","components","props","title","type","String","required","amount","Number","columns","response","require","data","recipes","DisplayColumns","offset","mounted","updateRecipes","methods","IncreaseOffset","increaseValue","arguments","length","undefined","_arguments","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$recipes","wrap","_callee$","_context","prev","next","a","console","log","push","apply","_toConsumableArray","error","stop","getRecipesFromApi","_this$recipes2"],"sources":["src/components/RecipePreviewList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n  <b-container>\r\n    <h3>\r\n      {{ title }}:\r\n      <slot></slot>\r\n    </h3>\r\n    <b-row :cols=\"DisplayColumns\" class=\"custom-row\">\r\n      <b-col v-for=\"r in recipes\" :key=\"r.id\" class=\"custom-col\">\r\n        <RecipePreview class=\"recipePreview\" :recipe=\"r\" />\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RecipePreview from \"./RecipePreview.vue\";\r\nimport { mockGetRecipesPreview } from \"../services/recipes.js\";\r\n\r\nexport default {\r\n  name: \"RecipePreviewList\",\r\n  components: {\r\n    RecipePreview\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    amount:{\r\n      type: Number,\r\n      required: true\r\n    },\r\n    columns:{\r\n      type: Number,\r\n      required: false\r\n    },\r\n    response:{\r\n      require:false\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      recipes: [],\r\n      DisplayColumns: 0,\r\n      offset: 0\r\n    };\r\n  },\r\n  mounted() {\r\n    this.updateRecipes(this.response);\r\n  },\r\n  methods: {\r\n    IncreaseOffset(increaseValue = 3){\r\n      this.offset = this.offset + increaseValue\r\n      this.updateRecipes()\r\n    },\r\n    async updateRecipes(response=null) {\r\n      try {\r\n        // const response = await this.axios.get(\r\n        //   this.$root.store.server_domain + \"/recipes/random\",\r\n        // );\r\n        a\r\n        if (!response)\r\n          response = mockGetRecipesPreview(this.amount, this.offset);\r\n\r\n        console.log(response);\r\n        const recipes = response.data.recipes;\r\n        console.log(recipes);\r\n        this.recipes = [];\r\n        this.recipes.push(...recipes);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    getRecipesFromApi(response){\r\n        this.recipes = []\r\n        this.recipes.push(...response)\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container{\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 800px;\r\n  align-items: center;\r\n}\r\n.custom-row {\r\n  row-gap: 50px; /* Adjust this value to increase the spacing between rows */\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;;;AAiBA,OAAAA,aAAA;AACA,SAAAC,qBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,aAAA,EAAAA;EACA;EACAI,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAG,OAAA;MACAL,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAI,QAAA;MACAC,OAAA;IACA;EACA;EAEAC,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,aAAA,MAAAP,QAAA;EACA;EACAQ,OAAA;IACAC,cAAA,WAAAA,eAAA;MAAA,IAAAC,aAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA;MACA,KAAAN,MAAA,QAAAA,MAAA,GAAAK,aAAA;MACA,KAAAH,aAAA;IACA;IACAA,aAAA,WAAAA,cAAA;MAAA,IAAAO,UAAA,GAAAH,SAAA;QAAAI,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAnB,QAAA,EAAAoB,aAAA,EAAAjB,OAAA;QAAA,OAAAc,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAzB,QAAA,GAAAc,UAAA,CAAAF,MAAA,QAAAE,UAAA,QAAAD,SAAA,GAAAC,UAAA;cACA;gBACA;gBACA;gBACA;gBACAY,CAAA;gBACA,KAAA1B,QAAA,EACAA,QAAA,GAAAX,qBAAA,CAAA0B,KAAA,CAAAlB,MAAA,EAAAkB,KAAA,CAAAV,MAAA;gBAEAsB,OAAA,CAAAC,GAAA,CAAA5B,QAAA;gBACAG,OAAA,GAAAH,QAAA,CAAAE,IAAA,CAAAC,OAAA;gBACAwB,OAAA,CAAAC,GAAA,CAAAzB,OAAA;gBACAY,KAAA,CAAAZ,OAAA;gBACA,CAAAiB,aAAA,GAAAL,KAAA,CAAAZ,OAAA,EAAA0B,IAAA,CAAAC,KAAA,CAAAV,aAAA,EAAAW,kBAAA,CAAA5B,OAAA;cACA,SAAA6B,KAAA;gBACAL,OAAA,CAAAC,GAAA,CAAAI,KAAA;cACA;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IACA;IACAe,iBAAA,WAAAA,kBAAAlC,QAAA;MAAA,IAAAmC,cAAA;MACA,KAAAhC,OAAA;MACA,CAAAgC,cAAA,QAAAhC,OAAA,EAAA0B,IAAA,CAAAC,KAAA,CAAAK,cAAA,EAAAJ,kBAAA,CAAA/B,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}