{"ast":null,"code":"// src/services/auth.js\n\nexport function mockLogin(credentials) {\n  var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  // Check if already logged in\n  if (!success) {\n    throw {\n      status: 409,\n      response: {\n        data: {\n          message: \"A user is already logged in\",\n          success: false\n        }\n      }\n    };\n  }\n\n  // If all checks pass, return a success message\n  return {\n    status: 200,\n    response: {\n      data: {\n        message: \"login succeeded\",\n        success: true\n      }\n    }\n  };\n}\nexport function mockRegister(userDetails) {\n  var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (!success) {\n    throw {\n      status: 409,\n      response: {\n        data: {\n          message: \"Username taken\",\n          success: false\n        }\n      }\n    };\n  }\n  return {\n    status: 200,\n    response: {\n      data: {\n        message: \"user created\",\n        success: true\n      }\n    }\n  };\n}\nexport function mockLogout() {\n  return {\n    status: 200,\n    response: {\n      data: {\n        message: \"logout succeeded\",\n        success: true\n      }\n    }\n  };\n}","map":{"version":3,"names":["mockLogin","credentials","success","arguments","length","undefined","status","response","data","message","mockRegister","userDetails","mockLogout"],"sources":["C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/src/services/auth.js"],"sourcesContent":["// src/services/auth.js\r\n\r\nexport function mockLogin(credentials, success = true) {\r\n  // Check if already logged in\r\n  if (!success) {\r\n    throw {\r\n      status: 409,\r\n      response: {\r\n        data: { message: \"A user is already logged in\", success: false },\r\n      },\r\n    };\r\n  }\r\n\r\n  // If all checks pass, return a success message\r\n  return {\r\n    status: 200,\r\n    response: { data: { message: \"login succeeded\", success: true } },\r\n  };\r\n}\r\n\r\nexport function mockRegister(userDetails, success = true) {\r\n  if (!success) {\r\n    throw {\r\n      status: 409,\r\n      response: { data: { message: \"Username taken\", success: false } },\r\n    };\r\n  }\r\n\r\n  return {\r\n    status: 200,\r\n    response: { data: { message: \"user created\", success: true } },\r\n  };\r\n}\r\n\r\nexport function mockLogout() {\r\n  return {\r\n    status: 200,\r\n    response: { data: { message: \"logout succeeded\", success: true } },\r\n  };\r\n}\r\n"],"mappings":"AAAA;;AAEA,OAAO,SAASA,SAASA,CAACC,WAAW,EAAkB;EAAA,IAAhBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACnD;EACA,IAAI,CAACD,OAAO,EAAE;IACZ,MAAM;MACJI,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE;QACRC,IAAI,EAAE;UAAEC,OAAO,EAAE,6BAA6B;UAAEP,OAAO,EAAE;QAAM;MACjE;IACF,CAAC;EACH;;EAEA;EACA,OAAO;IACLI,MAAM,EAAE,GAAG;IACXC,QAAQ,EAAE;MAAEC,IAAI,EAAE;QAAEC,OAAO,EAAE,iBAAiB;QAAEP,OAAO,EAAE;MAAK;IAAE;EAClE,CAAC;AACH;AAEA,OAAO,SAASQ,YAAYA,CAACC,WAAW,EAAkB;EAAA,IAAhBT,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACtD,IAAI,CAACD,OAAO,EAAE;IACZ,MAAM;MACJI,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE;QAAEC,IAAI,EAAE;UAAEC,OAAO,EAAE,gBAAgB;UAAEP,OAAO,EAAE;QAAM;MAAE;IAClE,CAAC;EACH;EAEA,OAAO;IACLI,MAAM,EAAE,GAAG;IACXC,QAAQ,EAAE;MAAEC,IAAI,EAAE;QAAEC,OAAO,EAAE,cAAc;QAAEP,OAAO,EAAE;MAAK;IAAE;EAC/D,CAAC;AACH;AAEA,OAAO,SAASU,UAAUA,CAAA,EAAG;EAC3B,OAAO;IACLN,MAAM,EAAE,GAAG;IACXC,QAAQ,EAAE;MAAEC,IAAI,EAAE;QAAEC,OAAO,EAAE,kBAAkB;QAAEP,OAAO,EAAE;MAAK;IAAE;EACnE,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}