{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      query: '',\n      numberOfResults: 5,\n      resultOptions: [5, 10, 15],\n      selectedFilter: '',\n      filterOptions: [{\n        value: '',\n        text: 'No filter'\n      }, {\n        value: 'vegetarian',\n        text: 'Vegetarian'\n      }, {\n        value: 'vegan',\n        text: 'Vegan'\n      }, {\n        value: 'glutenFree',\n        text: 'Gluten Free'\n      }\n      // Add more filters as needed\n      ],\n\n      sortOption: '',\n      sortOptions: [{\n        value: '',\n        text: 'No sorting'\n      }, {\n        value: 'time',\n        text: 'Preparation Time'\n      }, {\n        value: 'popularity',\n        text: 'Popularity'\n      }],\n      recipes: []\n    };\n  },\n  computed: {\n    sortedRecipes: function sortedRecipes() {\n      if (this.sortOption === 'time') {\n        return _toConsumableArray(this.recipes).sort(function (a, b) {\n          return a.readyInMinutes - b.readyInMinutes;\n        });\n      } else if (this.sortOption === 'popularity') {\n        return _toConsumableArray(this.recipes).sort(function (a, b) {\n          return b.aggregateLikes - a.aggregateLikes;\n        });\n      }\n      return this.recipes;\n    }\n  },\n  methods: {\n    searchRecipes: function searchRecipes() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var apiKey, url, response, results;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              apiKey = '0d0cd3fd33f045e884781cc1c28244ce'; // Replace with your Spoonacular API key\n              url = \"https://api.spoonacular.com/recipes/complexSearch?query=\".concat(_this.query, \"&number=\").concat(_this.numberOfResults, \"&apiKey=\").concat(apiKey, \"&addRecipeInformation=true\");\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.get(url);\n            case 5:\n              response = _context.sent;\n              results = response.data.results;\n              if (_this.selectedFilter) {\n                results = results.filter(function (recipe) {\n                  return recipe[_this.selectedFilter];\n                });\n              }\n              _this.recipes = results;\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Error fetching recipes:', _context.t0);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 11]]);\n      }))();\n    },\n    viewRecipe: function viewRecipe(recipeId) {\n      // Implement logic to view recipe details\n      this.$router.push({\n        name: 'RecipeDetail',\n        params: {\n          id: recipeId\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","query","numberOfResults","resultOptions","selectedFilter","filterOptions","value","text","sortOption","sortOptions","recipes","computed","sortedRecipes","_toConsumableArray","sort","a","b","readyInMinutes","aggregateLikes","methods","searchRecipes","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiKey","url","response","results","wrap","_callee$","_context","prev","next","concat","get","sent","filter","recipe","t0","console","error","stop","viewRecipe","recipeId","$router","push","name","params","id"],"sources":["src/pages/SearchPageNew.vue"],"sourcesContent":["<template>\r\n  <b-jumbotron>\r\n  <div>\r\n    <b-form @submit.prevent=\"searchRecipes\">\r\n      <b-form-group label=\"Search for recipes\">\r\n        <b-form-input v-model=\"query\" placeholder=\"Enter recipe name\"></b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-form-group label=\"Number of recipes to return\">\r\n        <b-form-select v-model=\"numberOfResults\" :options=\"resultOptions\"></b-form-select>\r\n      </b-form-group>\r\n\r\n      <b-form-group label=\"Filter by\">\r\n        <b-form-select v-model=\"selectedFilter\" :options=\"filterOptions\"></b-form-select>\r\n      </b-form-group>\r\n\r\n      <b-button type=\"submit\" variant=\"primary\">Search</b-button>\r\n    </b-form>\r\n\r\n    <div v-if=\"recipes.length\">\r\n      <b-form-group label=\"Sort by\">\r\n        <b-form-select v-model=\"sortOption\" :options=\"sortOptions\"></b-form-select>\r\n      </b-form-group>\r\n      \r\n      <h3>Search Results:</h3>\r\n      <b-row>\r\n        <b-col v-for=\"recipe in sortedRecipes\" :key=\"recipe.id\" cols=\"12\" md=\"4\">\r\n          <b-card :title=\"recipe.title\" :img-src=\"recipe.image\" img-alt=\"Recipe Image\" img-top @click=\"viewRecipe(recipe.id)\">\r\n            <b-card-text>\r\n              Ready in {{ recipe.readyInMinutes }} minutes<br>\r\n              Likes: {{ recipe.aggregateLikes }}\r\n            </b-card-text>\r\n            <b-button @click=\"viewRecipe(recipe.id)\" variant=\"info\">View Recipe</b-button>\r\n          </b-card>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n    <div v-else>\r\n      <p>No relevant results found.</p>\r\n    </div>\r\n  </div>\r\n  </b-jumbotron>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      query: '',\r\n      numberOfResults: 5,\r\n      resultOptions: [5, 10, 15],\r\n      selectedFilter: '',\r\n      filterOptions: [\r\n        { value: '', text: 'No filter' },\r\n        { value: 'vegetarian', text: 'Vegetarian' },\r\n        { value: 'vegan', text: 'Vegan' },\r\n        { value: 'glutenFree', text: 'Gluten Free' },\r\n        // Add more filters as needed\r\n      ],\r\n      sortOption: '',\r\n      sortOptions: [\r\n        { value: '', text: 'No sorting' },\r\n        { value: 'time', text: 'Preparation Time' },\r\n        { value: 'popularity', text: 'Popularity' }\r\n      ],\r\n      recipes: []\r\n    };\r\n  },\r\n  computed: {\r\n    sortedRecipes() {\r\n      if (this.sortOption === 'time') {\r\n        return [...this.recipes].sort((a, b) => a.readyInMinutes - b.readyInMinutes);\r\n      } else if (this.sortOption === 'popularity') {\r\n        return [...this.recipes].sort((a, b) => b.aggregateLikes - a.aggregateLikes);\r\n      }\r\n      return this.recipes;\r\n    }\r\n  },\r\n  methods: {\r\n    async searchRecipes() {\r\n      const apiKey = '0d0cd3fd33f045e884781cc1c28244ce';  // Replace with your Spoonacular API key\r\n      const url = `https://api.spoonacular.com/recipes/complexSearch?query=${this.query}&number=${this.numberOfResults}&apiKey=${apiKey}&addRecipeInformation=true`;\r\n\r\n      try {\r\n        const response = await axios.get(url);\r\n        let results = response.data.results;\r\n\r\n        if (this.selectedFilter) {\r\n          results = results.filter(recipe => recipe[this.selectedFilter]);\r\n        }\r\n\r\n        this.recipes = results;\r\n      } catch (error) {\r\n        console.error('Error fetching recipes:', error);\r\n      }\r\n    },\r\n    viewRecipe(recipeId) {\r\n      // Implement logic to view recipe details\r\n      this.$router.push({ name: 'RecipeDetail', params: { id: recipeId } });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any additional styling if needed */\r\n.center {\r\n  width: 50%;\r\n  max-width: 300px; /* Adjust as needed */\r\n}\r\n\r\n.favorite-icon,\r\n.vegan,\r\n.glutenFree,\r\n.vegi {\r\n  width: 30px;\r\n  height: auto;\r\n  margin-right: 5px;\r\n}\r\n</style>"],"mappings":";;;;;;;;AA6CA,OAAAA,KAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,eAAA;MACAC,aAAA;MACAC,cAAA;MACAC,aAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA;MACA;MAAA,CACA;;MACAC,UAAA;MACAC,WAAA,GACA;QAAAH,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,EACA;MACAG,OAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA,WAAAA,cAAA;MACA,SAAAJ,UAAA;QACA,OAAAK,kBAAA,MAAAH,OAAA,EAAAI,IAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,CAAAE,cAAA,GAAAD,CAAA,CAAAC,cAAA;QAAA;MACA,gBAAAT,UAAA;QACA,OAAAK,kBAAA,MAAAH,OAAA,EAAAI,IAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAE,cAAA,GAAAH,CAAA,CAAAG,cAAA;QAAA;MACA;MACA,YAAAR,OAAA;IACA;EACA;EACAS,OAAA;IACAC,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,GAAA,EAAAC,QAAA,EAAAC,OAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAR,MAAA;cACAC,GAAA,8DAAAQ,MAAA,CAAAd,KAAA,CAAApB,KAAA,cAAAkC,MAAA,CAAAd,KAAA,CAAAnB,eAAA,cAAAiC,MAAA,CAAAT,MAAA;cAAAM,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGAnC,KAAA,CAAAqC,GAAA,CAAAT,GAAA;YAAA;cAAAC,QAAA,GAAAI,QAAA,CAAAK,IAAA;cACAR,OAAA,GAAAD,QAAA,CAAA5B,IAAA,CAAA6B,OAAA;cAEA,IAAAR,KAAA,CAAAjB,cAAA;gBACAyB,OAAA,GAAAA,OAAA,CAAAS,MAAA,WAAAC,MAAA;kBAAA,OAAAA,MAAA,CAAAlB,KAAA,CAAAjB,cAAA;gBAAA;cACA;cAEAiB,KAAA,CAAAX,OAAA,GAAAmB,OAAA;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAQ,EAAA,GAAAR,QAAA;cAEAS,OAAA,CAAAC,KAAA,4BAAAV,QAAA,CAAAQ,EAAA;YAAA;YAAA;cAAA,OAAAR,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAEA;IACAmB,UAAA,WAAAA,WAAAC,QAAA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,MAAA;UAAAC,EAAA,EAAAL;QAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}