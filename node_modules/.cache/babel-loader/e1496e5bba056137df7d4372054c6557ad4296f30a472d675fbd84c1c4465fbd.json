{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/assignment2-1-208897991_208009845/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"SaerchPage\",\n  components: {\n    RecipePreview: RecipePreview\n  },\n  data: function data(vm) {\n    return {\n      searchMessage: \"\",\n      recipes: []\n    };\n  },\n  mounted: function mounted() {\n    this.updateRecipes();\n  },\n  methods: {\n    updateRecipes: function updateRecipes() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$recipes, amountToFetch, response, recipes;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                // const response = await this.axios.get(\n                //   this.$root.store.server_domain + \"/recipes/random\",\n                // );\n                amountToFetch = 3; // Set this to how many recipes you want to fetch\n                response = mockGetRecipesPreview(amountToFetch);\n                console.log(response);\n                recipes = response.data.recipes;\n                console.log(recipes);\n                _this.recipes = [];\n                (_this$recipes = _this.recipes).push.apply(_this$recipes, _toConsumableArray(recipes));\n              } catch (error) {\n                console.log(error);\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["name","components","RecipePreview","data","vm","searchMessage","recipes","mounted","updateRecipes","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$recipes","amountToFetch","response","wrap","_callee$","_context","prev","next","mockGetRecipesPreview","console","log","push","apply","_toConsumableArray","error","stop"],"sources":["src/pages/SearchPage.vue"],"sourcesContent":["\r\n<template>\r\n<div  class=\"container\">\r\n\r\n  <div>\r\n  <b-jumbotron>\r\n    <template #header>Search</template>\r\n\r\n    <template #lead>\r\n      Here you will find the recipes \r\n    </template>\r\n\r\n    <hr class=\"my-4\">\r\n  <!-- search components -->\r\n  <b-input-group prepend=\"Search\" class=\"mt-3\">\r\n    <b-form-input v-model=\"searchMessage\"></b-form-input>\r\n    <b-input-group-append>\r\n      <b-button variant=\"info\">Button</b-button>\r\n    </b-input-group-append>\r\n  </b-input-group>\r\n      <b-row>\r\n      <b-col v-for=\"r in recipes\" :key=\"r.id\">\r\n        <RecipePreview class=\"recipePreview\" :recipe=\"r\" />\r\n      </b-col>\r\n    </b-row>\r\n    <!-- <p>\r\n      It uses utility classes for typography and spacing to space content out within the larger\r\n      container.\r\n    </p> -->\r\n  </b-jumbotron>\r\n</div>\r\n\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"SaerchPage\",\r\n      components: {\r\n    RecipePreview\r\n  },\r\n    data(vm){\r\n      return{\r\n        searchMessage:\"\",\r\n        recipes: []\r\n      }\r\n    },\r\n      mounted() {\r\n    this.updateRecipes();\r\n  },\r\n  methods: {\r\n    async updateRecipes() {\r\n      try {\r\n        // const response = await this.axios.get(\r\n        //   this.$root.store.server_domain + \"/recipes/random\",\r\n        // );\r\n\r\n        const amountToFetch = 3; // Set this to how many recipes you want to fetch\r\n        const response = mockGetRecipesPreview(amountToFetch);\r\n\r\n\r\n        console.log(response);\r\n        const recipes = response.data.recipes;\r\n        console.log(recipes);\r\n        this.recipes = [];\r\n        this.recipes.push(...recipes);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"mappings":";;;;AAqCA;EACAA,IAAA;EACAC,UAAA;IACAC,aAAA,EAAAA;EACA;EACAC,IAAA,WAAAA,KAAAC,EAAA;IACA;MACAC,aAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,aAAA,WAAAA,cAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,aAAA,EAAAC,aAAA,EAAAC,QAAA,EAAAX,OAAA;QAAA,OAAAM,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACA;gBACA;gBACA;gBACA;gBAEAN,aAAA;gBACAC,QAAA,GAAAM,qBAAA,CAAAP,aAAA;gBAGAQ,OAAA,CAAAC,GAAA,CAAAR,QAAA;gBACAX,OAAA,GAAAW,QAAA,CAAAd,IAAA,CAAAG,OAAA;gBACAkB,OAAA,CAAAC,GAAA,CAAAnB,OAAA;gBACAI,KAAA,CAAAJ,OAAA;gBACA,CAAAS,aAAA,GAAAL,KAAA,CAAAJ,OAAA,EAAAoB,IAAA,CAAAC,KAAA,CAAAZ,aAAA,EAAAa,kBAAA,CAAAtB,OAAA;cACA,SAAAuB,KAAA;gBACAL,OAAA,CAAAC,GAAA,CAAAI,KAAA;cACA;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}